@using MR.PagedList;
@using myTube.Domain.Entities;
@model PagedList<Filme>

<link href="~/css/video.css" rel="stylesheet" />

@{
	var canalId = Context.Request.Query["CanalId"].ToString();
	string watch = Context.Request.Query["Watch"].ToString();
	string categoria = Context.Request.Query["Categoria"].ToString();
}

<div class="filtro">
	@*<span>@ViewBag.Pesquisa</span>*@

@*	<input type="text" />
	<button type="button">Pesquisar</button>
*@
	<div class="buttons">
		<button class="icon far fa-check-square @(watch.Contains("A") ? "icon-green" : "icon-gray")" onclick="setFilterAssistido()"></button>
		<button class="icon far fa-clock @(watch.Contains("L") ? "icon-blue" : "icon-gray")" onclick="setFilterAssistirDepois()"></button>
		<button class="icon far fa-star @(watch.Contains("F") ? "icon-yellow" : "icon-gray")" onclick="setFilterFavorito()"></button>
		<button class="icon far fa-minus-square @(watch.Contains("I") ? "icon-red" : "icon-gray")" onclick="setFilterIgnorado()"></button>
	</div>

	<div>
		<label for="filtro_categoria">Categorias</label>
		<select name="filtro_categoria" id="categorias" onchange="setFilterCategoria()" aria-selected="true">

			<option value="" selected="@(string.IsNullOrWhiteSpace(categoria))")>Todas as categorias</option>
			@foreach (var cat in ViewBag.Categorias)
			{
				<option value="@cat" selected="@(cat == categoria)">@cat</option>
			}
		</select>
	</div>
</div>

@foreach (var item in Model.Items)
{
	//var linkTo = "https://www.youtube.com/watch?v=" + item.YoutubeFilmeId;
	var duration = new TimeSpan(0, 0, (int)item.DurationSecs);

	<div class="row pb-2" id="item-@item.Id">

		<div class="col-12">

			<div class="d-flex border px-2">

				<div>
					<button button type="button" class="button-link" data-toggle="ajax-modal" data-target="#playVideo" data-url="@Url.Action("PlayVideo", "Video", new { id = item.Id })">
						<img src="@Html.DisplayFor(modelItem => item.ThumbnailMinUrl)" />
					</button>
					@*<a href="#" data-toggle="ajax-modal" data-target="#playVideo" data-url="@Url.Action("PlayVideo", "Video", new { id = item.Id })">
						<img src="@Html.DisplayFor(modelItem => item.ThumbnailMinUrl)" />
						</a>*@
				</div>

				<div class="flex-fill d-flex flex-column px-2">

					<div class="title flex-fill">
						<button button type="button" class="button-link" data-toggle="ajax-modal" data-target="#playVideo" data-url="@Url.Action("PlayVideo", "Video", new { id = item.Id })">
							@item.Title
						</button>
						@*<a href="#" data-toggle="ajax-modal" data-target="#playVideo" data-url="@Url.Action("PlayVideo", "Video", new { id = item.Id })">
							</a>*@
					</div>

					<div class="d-flex rodape">

						<div class="duration-area">

							@if (item.ScheduledStartTime > DateTime.Now)
							{
								@*MANTIDO PARA FINS DIDATICOS*@
								<label class="duration @(item.ScheduledStartTime > DateTime.Now ? "live" : "")">@(((DateTime)item.ScheduledStartTime).ToString("dd/MM/yyyy HH:mm"))</label>
							}
							else
							{
								<label class="duration @(duration.TotalMinutes >= 40 ? "live" : "")">@duration</label>
							}
						</div>

						<div class="published flex-fill">
							@item.PublishedAt
						</div>

						<div class="channel flex-fill text-right nolink">
							<button type="button" class="button-link button-canal" onclick="setCanalId('@item.CanalId')">
								@item.Canal.Title
							</button>
						</div>

					</div>
				</div>

				<div class="buttons buttons-right">
					<button class="icon far fa-check-square @(item.Status == EStatusVideo.Assistido ? "icon-green" : "icon-gray")" onclick="setAssistido('@item.Id', `@item.Title`)"></button>
					<button class="icon far fa-clock @(item.Status == EStatusVideo.AssistirDepois ? "icon-blue" : "icon-gray")" onclick="setAssistirDepois('@item.Id', `@item.Title`)"></button>
					<button class="icon far fa-star @(item.Status == EStatusVideo.Favorito ? "icon-yellow" : "icon-gray")" onclick="setFavorito('@item.Id', `@item.Title`)"></button>
					<button class="icon far fa-minus-square @(item.Status == EStatusVideo.Ignorado ? "icon-red" : "icon-gray")" onclick="setIgnorado('@item.Id', `@item.Title`)"></button>
					@*<button class="icon icon-red far fa-question-circle" onclick="setConsole('@item.Id', '@item.Title')"></button>*@
				</div>

			</div>

		</div>
	</div>
}

<div class="text-center">
	<button onclick="setPage(@Model.PageNumber-1)"><<<</button>
	<label>@Model.PageNumber/@Model.TotalPages</label>
	<button onclick="setPage(@Model.PageNumber+1)">>>></button>
</div>

@section Scripts {
	<script src="~/js/video.js"></script>
	<script>
		// 2. This code loads the IFrame Player API code asynchronously.
		var tag = document.createElement('script');

		tag.src = "https://www.youtube.com/iframe_api";
		var firstScriptTag = document.getElementsByTagName('script')[0];
		firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

		var player;
		function onYouTubeIframeAPIReady() {
		}
	</script>
}
