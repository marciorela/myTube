@model IEnumerable<myTube.Domain.Entities.Filme>

    <link href="~/css/video.css" rel="stylesheet" />

@{
    ViewData["Title"] = "Index";
}

@foreach (var item in Model)
{
    <div class="row pb-2" id="item-@item.Id">

        <div class="col-12">

            <div class="d-flex border px-2">

                <div>
                    <a href="https://www.youtube.com/watch?v=@item.YoutubeFilmeId" target="_blank">
                        <img src="@Html.DisplayFor(modelItem => item.ThumbnailMinUrl)" />
                    </a>
                </div>

                <div class="flex-fill d-flex flex-column px-2">

                    <div class="title flex-fill">
                        @item.Title
                    </div>

                    <div class="d-flex rodape">

                        <div class="duration">
                            @{
                                var t = new TimeSpan(0, 0, (int)item.DurationSecs);
                                <label>@t</label>
                            }
                        </div>

                        <div class="published flex-fill">
                            @item.PublishedAt
                        </div>

                        <div class="channel flex-fill text-right">
                            @item.Canal.Title
                        </div>

                    </div>
                </div>

                <div>
                    <i class="icon icon-green far fa-check-square" onclick="setAssistido('@item.Id')"></i>
                    <i class="icon icon-blue far fa-clock" onclick="setAssistirDepois('@item.Id')"></i>
                    <i class="icon icon-yellow far fa-star" onclick="setFavorito('@item.Id')"></i>
                    <i class="icon icon-red far fa-minus-square" onclick="setIgnorado('@item.Id')"></i>
                </div>

            </div>

        </div>
    </div>
}

<script>
    function setAssistido(id) {
        let params = {
            url: `@Url.Action("Assistido", "Video")/${id}`,
            method: 'get',
            success: () => {
                toastr.success('Video marcado como Assistido', 'myTube');
                $(`#item-${id}`).fadeOut('slow', () => $(this).remove());
                $(`#item-${id}`).remove();
            },
            error: (resp) => { toastr.error(resp.statusText, 'myTube'); },
            complete: () => { }
        };

        $.ajax(params)
    }

    function setIgnorado(id) {
        let params = {
            url: `@Url.Action("Ignorado", "Video")/${id}`,
            method: 'get',
            success: () => {
                toastr.warning('Video marcado como Ignorado', 'myTube');
                $(`#item-${id}`).fadeOut('slow', () => $(this).remove());
                $(`#item-${id}`).remove();
            },
            error: (resp) => { toastr.error(resp.statusText, 'myTube'); },
            complete: () => { }
        };

        $.ajax(params)
    }

    function setFavorito(id) {
        let params = {
            url: `@Url.Action("Favorito", "Video")/${id}`,
            method: 'get',
            success: () => {
                toastr.warning('Video marcado como Favorito', 'myTube');
                $(`#item-${id}`).fadeOut('slow', () => $(this).remove());
                $(`#item-${id}`).remove();
            },
            error: (resp) => { toastr.error(resp.statusText, 'myTube'); },
            complete: () => { }
        };

        $.ajax(params)
    }

    function setAssistirDepois(id) {
        let params = {
            url: `@Url.Action("AssistirDepois", "Video")/${id}`,
            method: 'get',
            success: () => {
                toastr.info('Video marcado como Assistir Depois', 'myTube');
                $(`#item-${id}`).fadeOut('slow', () => $(this).remove());
                $(`#item-${id}`).remove();
            },
            error: (resp) => { toastr.error(resp.statusText, 'myTube'); },
            complete: () => { }
        };

        $.ajax(params)
    }

</script>
